# THIS FILE CONTAINS A ALL THE EXAMPLE QUERIES USED IN THE PHYSICAL QUANTITY DOCUMENTATION.
# TO RUN THIS CODE FROM THE GRAPHIQL WINDOW, PASTE THE CONTENTS OF THIS FILE INTO THE 
# INPUT FRAME, AND THE CONTENTS OF THE Variables.gql FILE INTO THE QUERY VARIABLES FRAME.

fragment PhysicalDimensionFragment on PhysicalDimension {
  name
  aliases
  formula
}

fragment UnitOfMeasurePrefixFragment on UnitOfMeasurePrefix {
  name
  aliases
  multiplier
}

fragment UnitOfMeasureFragment on UnitOfMeasure {
  name
  aliases
  factors {
    base {
      name
      aliases
      dimension { ... PhysicalDimensionFragment }
      siUnitConversion { multiplier offset }
    }
    prefix { ... UnitOfMeasurePrefixFragment }
    exponent
}}

fragment PhysicalQuantityFragment on PhysicalQuantity{
  magnitude
  unitOfMeasure{ ... UnitOfMeasureFragment }
}

fragment SystemOfUnitsFragment on SystemOfUnits{
  name
  description
  units{ ... UnitOfMeasureFragment }
  prefixes{ ... UnitOfMeasurePrefixFragment }   
}

query EXAMPLES($IMPERIAL:SystemOfUnitsInput, $LENGTH:PhysicalDimensionInput, $PSI:UnitOfMeasureInput!,
  $X1:PhysicalQuantityInput!, $X2:PhysicalQuantityInput!, $X3:PhysicalQuantityInput!,
  $Y1:PhysicalQuantityInput!, $Y2:PhysicalQuantityInput!, $Y3:PhysicalQuantityInput!
){ 
  EXAMPLE1: parse(source:"ten psi"){ name }
  EXAMPLE2: parse(source:"ten psi"){ magnitude }
  EXAMPLE3: parse(source:"ten psi"){ unitOfMeasure{ name } }
  EXAMPLE4: unitsOfMeasure { name }
  EXAMPLE5: parse(source: "9.8 kilogram * meter / second squared") {
    unitOfMeasure { name } }
  EXAMPLE6: unitOfMeasure(unitRef:{name:"mi/hr"}) { aliases }
  EXAMPLE7: unitOfMeasure(unitRef:{name:"N"}){ dimension{name} }
  EXAMPLE8: unitOfMeasurePrefixes{ name }
  EXAMPLE9: unitOfMeasurePrefixes{ name }
  EXAMPLE10: unitOfMeasurePrefixes{ aliases }
  EXAMPLE11: unitOfMeasurePrefixes{ multiplier }
  EXAMPLE12: physicalDimensions { name aliases formula}
  EXAMPLE13: physicalDimension(dimensionRef:{name:"ELECTRICAL_CURRENT"})
  {formula}
  EXAMPLE14: physicalDimensions{ name }
  EXAMPLE15: physicalDimension(dimensionRef:{formula:"L²M¹T⁻²"}){ aliases }
  EXAMPLE16: physicalDimension(dimensionRef:{name:"MOLAR_HEAT_CAPACITY"})
    {formula }
  EXAMPLE17: systemsOfUnits{ name, description}
  EXAMPLE18: systemOfUnits(systemRef:{name:"Imperial"}){units{ name }}
  EXAMPLE19: systemOfUnits(systemRef:{name:"mks"}){prefixes{ name }}
  EXAMPLE20: parse(source:"400 psi"){  name  }
  IMPERIAL: systemOfUnits(systemRef:{name:"Imperial"})
    {... SystemOfUnitsFragment}
  EXAMPLE21:
    parse(source:"400 psi",systemInputs:[$IMPERIAL]){name}
  LENGTH: physicalDimension( dimensionRef:{name:"LENGTH"})
  {... PhysicalDimensionFragment }
  EXAMPLE22: parse(source:"400 meters", dimensionInputs:[$LENGTH]){ name }
  EXAMPLE23: extractBatch( sources: [ 
    "the airspeed of the plane was 350 mph as it passed through 3000 meters.", 
    "The minimum runway length is 7500 feet."]) { 
  entity { name }}
  EXAMPLE24: extractBatch(sources: [
    "the airspeed of the plane was 350 mph as it passed through 3000 meters.",
    "The minimum runway length is 7500 feet."], systemInputs:[$IMPERIAL]) 
    { entity { name } }
  EXAMPLE25: extractBatch(sources: [ 
    "the airspeed of the plane was 350 mph as it passed through 3000 meters.", 
    "The minimum runway length is 7500 feet."], 
    dimensionInputs:[{name:"LENGTH",formula:"L¹"}]) { entity { name }}
  EXAMPLE26: extractBatch(sources: [ 
    "the airspeed of the plane was 350 mph as it passed through 3000 meters.",
    "The minimum runway length is 7500 feet."], dimensionInputs:[$LENGTH] ) 
    { entity { name } fromSpan, fromOffset }
  PSI: unitOfMeasure(unitRef:{name:"lb/in²"})
  { ...UnitOfMeasureFragment }
  EXAMPLE27: parse(source:"100 mbar"){ 
    convertTo(toUnitInput:$PSI){ 
      roundTo(precision:2){ name}}}
  EXAMPLE29: parse(source:"100 mbar"){canBeConvertedTo( toUnitInput:$PSI) }
  X1: parse(source:"12 inch"){...PhysicalQuantityFragment}
  X2: parse(source:"1 foot"){...PhysicalQuantityFragment}
  X3: parse(source:"1/3 yard"){...PhysicalQuantityFragment}
  Y1: parse(source:"12 inch"){...PhysicalQuantityFragment}
  Y2: parse(source:"1 foot"){...PhysicalQuantityFragment}
  Y3: parse(source:"1/3 acre"){...PhysicalQuantityFragment}
  EXAMPLE30: sum( summands: [$X1,$X2,$X3], precision: 2) { name }
  EXAMPLE31: product( factors: [$Y1,$Y2,$Y3], precision: 2) { name }
}
